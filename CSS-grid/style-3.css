*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


body{
    font-family: Arial, Helvetica, sans-serif;
}


.item{
    background: black;
    color: hotpink;
    padding: 15px;
    border: 3px solid green;
}


.container{
    max-width: 1000px;
    border: 6px solid red;
    margin: 100px auto;
    display: grid;  
grid-template-columns: repeat(auto-fit , minmax(150px , 1fr));
gap: 10px;
/* This property put boxes on empty spaces */
grid-auto-flow: dense;
}


/* if we want that item1 takes two column width */
.item1{
    grid-column-start: 1;
    grid-column-end: 3;
    /* Or You can also write as */
    grid-column: 1 / 3;
}

.item4{
    grid-row: 1 / 4;
}
.item6{
    grid-column: 1 / 5;
}

/* Now you can see there is so much Empty spaces left , for filling this we ==> " grid-auto-flow: dense; " in grid container*/


.Store{
    max-width: 1000px;
    height: 500px;
    border: 6px solid blue;
    margin: 70px auto;
    display: grid;  
    grid-auto-rows: 70px;
grid-template-columns: repeat(3,150px );
gap: 10px;

/* ##########==>>  Justify - items it works on the direction of  X-axis  means , Horizontally  ##########==>>*/
/* justify-items: center; */
justify-items: end;
/* justify-items: start; */

/* ##########==>>  Align - items it works on the direction of  Y-axis  means , Vertically  ##########==>>*/
/* align-items: start; */
align-items: end;
/* align-items: center; */
}

/* In the place of align-items and justify-items , we can use  " place-items : vertical Horizontal " */



/* ##########==>>  <h1>Uses of Justify Content and Align Content</h1>  ##########==>> */
.Boxes{
    max-width: 1000px;
    height: 400px;
    border: 6px solid cadetblue;
    margin: 70px auto;
    display: grid;  
    grid-auto-rows: 70px;
grid-template-columns: repeat(3,150px );
gap: 10px;

/* ##########==>>  Justify - Content it works on the direction of  X-axis  means , Horizontally  ##########==>>*/
justify-content: end;
justify-content: space-between;
justify-content: space-around;
justify-content: space-evenly;
justify-content: center;

/* ##########==>>  Align - Content it works on the direction of  Y-axis  means , Vertically  ##########==>>*/
align-content: start;
align-content: end;
align-content: space-around;
align-content: center;
}

/* In the place of align-Content and justify-Content , we can use  " place-Content : vertical Horizontal" */


/* ##########==>>  <h1>Uses of Justify Self and Align Self</h1>  ##########==>> */
.Self{
    max-width: 700px;
    height: 400px;
    border: 6px solid magenta;
    margin: 70px auto;
    display: grid;  
    grid-auto-rows: 70px;
grid-template-columns: repeat(3,150px );
gap: 10px;
justify-content: center;
align-content: space-around;
}

.box1{
    justify-self: center;
}
.box2{
    align-self: start;
}
.box3{
    justify-self: end;
}
.box7{
    align-self: center;
}
.box11{
    align-self: end;
}
.box9{
    justify-self: center;
}

/* In the place of align-Content and justify-Content , we can use  " place-Self : vertical Horizontal" */















